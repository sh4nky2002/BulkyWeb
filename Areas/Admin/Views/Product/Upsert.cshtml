@model MyAspNetCoreApp.MyModels.ViewModels.ProductVM
<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
<div class="row">
    <div class="col-md-6">
        <h2 class="text-white">@(Model.ProductModel.Id!=0?"Update":"Create") Product</h2>
    </div>
</div>
    </div>
    <div class="card-body p-4">
     <form method="post" class="row" enctype="multipart/form-data">
     <input asp-for="ProductModel.Id" hidden />
     <input asp-for="ProductModel.ImageUrl" hidden />
     <div class="row">
        <div class="col-10">
  <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.Title"></label>
        <input asp-for="ProductModel.Title" class="form-control border-0 shadow" />
        <span asp-validation-for="ProductModel.Title" class="text-danger"></span>
    </div>

    <div class=" py-2 col-12 ">
        <label asp-for="ProductModel.Description" class="ms-2 text-muted"></label>
        <textarea asp-for="ProductModel.Description" class="form-control border-0 shadow" ></textarea>
    </div>
    <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.ListPrice"></label>
        <input asp-for="ProductModel.ListPrice" class="form-control border-0 shadow" />
        <span asp-validation-for="ProductModel.ListPrice" class="text-danger"></span>
    </div>
    <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.ISBN"></label>
        <input asp-for="ProductModel.ISBN" class="form-control border-0 shadow" />
        <span asp-validation-for="ProductModel.ISBN" class="text-danger"></span>
    </div>
 <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.Author"></label>
        <input asp-for="ProductModel.Author" class="form-control border-0 shadow" />
        <span asp-validation-for="ProductModel.Author" class="text-danger"></span>
    </div>
     <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.Price"></label>
        <input asp-for="ProductModel.Price" class="form-control border-0 shadow" />
        <span asp-validation-for="ProductModel.Price" class="text-danger"></span>
    </div>
     <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.Price50"></label>
        <input asp-for="ProductModel.Price50" class="form-control border-0 shadow" />
        <span asp-validation-for="ProductModel.Price50" class="text-danger"></span>
    </div>
     <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.Price100"></label>
        <input asp-for="ProductModel.Price100" class="form-control border-0 shadow" />
        <span asp-validation-for="ProductModel.Price100" class="text-danger"></span>
    </div>
      <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.ItemId"></label>
        <select asp-for="ProductModel.ItemId" asp-items="@Model.ItemList" >
          <option disabled selected>Choose Item</option>
        </select>
        <span asp-validation-for="ProductModel.ItemId" class="text-danger"></span>
    </div>
     <div class="form-floating py-2 col-12">
        <label asp-for="ProductModel.ImageUrl"></label>
        <input type="file" name="file" class="form-control border-0 shadow" />
    </div>
    <div class=" row pt-2" >
    <div class="col-6 col-md-3">
        @if(Model.ProductModel.Id!=0)
        {
        <button type="submit" class="btn btn-primary form-control">Update</button>
        }
        else
        {
              <button type="submit" class="btn btn-primary form-control">Create</button>
        }
    </div>
    <div class="col-6 col-md-3">
        <a href="@Url.Action("Index", "Product")" class="btn btn-secondary form-control">Back To List</a>
    </div>
    </div>
        </div>
        <div class="col-2">
            <img src="@Model.ProductModel.ImageUrl" width="100%" 
            style="border-radius:5px; border:1px solid #bbb9b9 "/>
        </div>
     </div>
  
</form>   
</div>

@{
    ViewData["Title"] = "Create Product";
}

@section Scripts{
  <script>
  tinymce.init({
    selector: 'textarea',
    plugins: [
      // Core editing features
      'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'lists', 'table', 'visualblocks', 'wordcount',
      // Your account includes a free trial of TinyMCE premium features
      // Try the most popular premium features until Feb 20, 2025:
      'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
    ],
    toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap ',
    tinycomments_mode: 'embedded',
    tinycomments_author: 'Author name',
    mergetags_list: [
      { value: 'First.Name', title: 'First Name' },
      { value: 'Email', title: 'Email' },
    ],
    ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
  });
</script>
}

